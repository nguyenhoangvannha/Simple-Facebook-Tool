/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simple.facebook.tool.view;

import com.restfb.Connection;
import com.restfb.FacebookClient;
import com.restfb.Parameter;
import com.restfb.types.Comment;
import com.restfb.types.Post;
import com.restfb.types.Reactions;
import com.restfb.types.User;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import simple.facebook.tool.controller.FBLog;
import simple.facebook.tool.controller.FBHelper;
import static simple.facebook.tool.controller.FBHelper.getPostsDetails;
import simple.facebook.tool.controller.GlobalValues;

/**
 *
 * @author nguye
 */
public class MainActivity extends javax.swing.JFrame {

    int counter = 0;
    String feedId;

    /**
     * Creates new form MainActivity
     */
    public MainActivity() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainActivity.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        customizeUI();
        addEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtToken = new javax.swing.JTextField();
        btnHelpToken = new javax.swing.JButton();
        btnTest = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tab0ID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tab0IDHelp = new javax.swing.JButton();
        tab0MaxPost = new javax.swing.JTextField();
        tab0MaxPostHelp = new javax.swing.JButton();
        tab0GetPost = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        tab0ReactionsOptions = new javax.swing.JComboBox<>();
        tab0Go = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab0Comment = new javax.swing.JTextArea();
        tab0CommentHelp = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        tab0OnlyComment = new javax.swing.JTextField();
        tab0OnlyCommentHelp = new javax.swing.JButton();
        tab0GoComment = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tab1Max = new javax.swing.JTextField();
        tab1MaxHelp = new javax.swing.JButton();
        tab1GetPosts = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tab1ReactionOptions = new javax.swing.JComboBox<>();
        tab1GoReact = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tab1Comment = new javax.swing.JTextArea();
        jButton11 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        tab1OnlyCommentID = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        tab1GoComment = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tab2ID = new javax.swing.JTextField();
        tab1MaxHelp1 = new javax.swing.JButton();
        tab2GetComments = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        tab2ReactionOptions = new javax.swing.JComboBox<>();
        tab2GoReact = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        proStatus = new javax.swing.JProgressBar();
        lblStatus = new javax.swing.JLabel();
        txtStatus = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("simple/facebook/tool/view/Bundle"); // NOI18N
        setTitle(bundle.getString("MainActivity.title")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 153, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText(bundle.getString("MainActivity.lblTitle.text")); // NOI18N

        jLabel1.setText(bundle.getString("MainActivity.jLabel1.text")); // NOI18N

        txtToken.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTokenFocusLost(evt);
            }
        });
        txtToken.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTokenKeyReleased(evt);
            }
        });

        btnHelpToken.setText(bundle.getString("MainActivity.btnHelpToken.text")); // NOI18N

        btnTest.setText(bundle.getString("MainActivity.btnTest.text")); // NOI18N
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtToken, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHelpToken)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtToken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHelpToken)
                    .addComponent(btnTest))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setToolTipText(bundle.getString("MainActivity.jTabbedPane1.toolTipText")); // NOI18N

        jLabel2.setText(bundle.getString("MainActivity.jLabel2.text")); // NOI18N

        tab0ID.setText(bundle.getString("MainActivity.tab0ID.text")); // NOI18N

        jLabel3.setText(bundle.getString("MainActivity.jLabel3.text")); // NOI18N

        tab0IDHelp.setText(bundle.getString("MainActivity.tab0IDHelp.text")); // NOI18N

        tab0MaxPost.setText(bundle.getString("MainActivity.tab0MaxPost.text")); // NOI18N
        tab0MaxPost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tab0MaxPostKeyReleased(evt);
            }
        });

        tab0MaxPostHelp.setText(bundle.getString("MainActivity.tab0MaxPostHelp.text")); // NOI18N

        tab0GetPost.setText(bundle.getString("MainActivity.tab0GetPost.text")); // NOI18N
        tab0GetPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab0GetPostActionPerformed(evt);
            }
        });

        jLabel8.setText(bundle.getString("MainActivity.jLabel8.text")); // NOI18N

        tab0ReactionsOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Like", "Love", "Haha", "Wow", "Sad", "Angry", "Random" }));
        tab0ReactionsOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab0ReactionsOptionsActionPerformed(evt);
            }
        });

        tab0Go.setText(bundle.getString("MainActivity.tab0Go.text")); // NOI18N
        tab0Go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab0GoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(tab0ID, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab0IDHelp)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab0MaxPost, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab0MaxPostHelp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab0GetPost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab0ReactionsOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab0Go)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(tab0ReactionsOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tab0Go))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(tab0ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(tab0IDHelp)
                        .addComponent(tab0MaxPost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tab0MaxPostHelp)
                        .addComponent(tab0GetPost)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setText(bundle.getString("MainActivity.jLabel9.text")); // NOI18N

        tab0Comment.setColumns(20);
        tab0Comment.setRows(5);
        jScrollPane2.setViewportView(tab0Comment);

        tab0CommentHelp.setText(bundle.getString("MainActivity.tab0CommentHelp.text")); // NOI18N

        jLabel10.setText(bundle.getString("MainActivity.jLabel10.text")); // NOI18N

        tab0OnlyComment.setText(bundle.getString("MainActivity.tab0OnlyComment.text")); // NOI18N

        tab0OnlyCommentHelp.setText(bundle.getString("MainActivity.tab0OnlyCommentHelp.text")); // NOI18N

        tab0GoComment.setText(bundle.getString("MainActivity.tab0GoComment.text")); // NOI18N
        tab0GoComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab0GoCommentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tab0CommentHelp))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tab0OnlyComment, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tab0OnlyCommentHelp))
                            .addComponent(tab0GoComment))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab0CommentHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tab0OnlyComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tab0OnlyCommentHelp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(tab0GoComment)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(bundle.getString("MainActivity.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jLabel4.setText(bundle.getString("MainActivity.jLabel4.text")); // NOI18N

        tab1Max.setText(bundle.getString("MainActivity.tab1Max.text")); // NOI18N

        tab1MaxHelp.setText(bundle.getString("MainActivity.tab1MaxHelp.text")); // NOI18N

        tab1GetPosts.setText(bundle.getString("MainActivity.tab1GetPosts.text")); // NOI18N
        tab1GetPosts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab1GetPostsActionPerformed(evt);
            }
        });

        jLabel5.setText(bundle.getString("MainActivity.jLabel5.text")); // NOI18N

        tab1ReactionOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Like", "Love", "Haha", "Wow", "Sad", "Angry", "Random" }));

        tab1GoReact.setText(bundle.getString("MainActivity.tab1GoReact.text")); // NOI18N
        tab1GoReact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab1GoReactActionPerformed(evt);
            }
        });

        jLabel11.setText(bundle.getString("MainActivity.jLabel11.text")); // NOI18N

        tab1Comment.setColumns(20);
        tab1Comment.setRows(5);
        jScrollPane3.setViewportView(tab1Comment);

        jButton11.setText(bundle.getString("MainActivity.jButton11.text")); // NOI18N

        jLabel12.setText(bundle.getString("MainActivity.jLabel12.text")); // NOI18N

        tab1OnlyCommentID.setText(bundle.getString("MainActivity.tab1OnlyCommentID.text")); // NOI18N

        jButton12.setText(bundle.getString("MainActivity.jButton12.text")); // NOI18N

        tab1GoComment.setText(bundle.getString("MainActivity.tab1GoComment.text")); // NOI18N
        tab1GoComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab1GoCommentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton11))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tab1OnlyCommentID, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton12))
                            .addComponent(tab1GoComment))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(tab1OnlyCommentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(tab1GoComment)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab1Max, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab1MaxHelp)
                .addGap(18, 18, 18)
                .addComponent(tab1GetPosts)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab1ReactionOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab1GoReact)
                .addGap(323, 323, 323))
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tab1Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tab1MaxHelp)
                    .addComponent(tab1GetPosts)
                    .addComponent(jLabel5)
                    .addComponent(tab1ReactionOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tab1GoReact))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("MainActivity.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jLabel7.setText(bundle.getString("MainActivity.jLabel7.text")); // NOI18N

        tab2ID.setText(bundle.getString("MainActivity.tab2ID.text")); // NOI18N

        tab1MaxHelp1.setText(bundle.getString("MainActivity.tab1MaxHelp1.text")); // NOI18N

        tab2GetComments.setText(bundle.getString("MainActivity.tab2GetComments.text")); // NOI18N
        tab2GetComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2GetCommentsActionPerformed(evt);
            }
        });

        jLabel14.setText(bundle.getString("MainActivity.jLabel14.text")); // NOI18N

        tab2ReactionOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Like", "Love", "Haha", "Wow", "Sad", "Angry" }));

        tab2GoReact.setText(bundle.getString("MainActivity.tab2GoReact.text")); // NOI18N
        tab2GoReact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2GoReactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab2ID, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab1MaxHelp1)
                .addGap(18, 18, 18)
                .addComponent(tab2GetComments)
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab2ReactionOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab2GoReact)
                .addGap(124, 124, 124))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tab2ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tab1MaxHelp1)
                    .addComponent(tab2GetComments)
                    .addComponent(jLabel14)
                    .addComponent(tab2ReactionOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tab2GoReact))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("MainActivity.jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        jLabel6.setText(bundle.getString("MainActivity.jLabel6.text")); // NOI18N

        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStatus.setText(bundle.getString("MainActivity.lblStatus.text")); // NOI18N

        txtLog.setColumns(20);
        txtLog.setRows(5);
        txtStatus.setViewportView(txtLog);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStatus)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(proStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatus)
                    .addComponent(proStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel13.setText(bundle.getString("MainActivity.jLabel13.text")); // NOI18N

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Tiếng Việt" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(jLabel13)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName(bundle.getString("MainActivity.jTabbedPane1.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        // TODO add your handling code here:
        FBLog.setTOKEN(txtToken.getText());
        try {
            FacebookClient client = FBHelper.getFacebookClient(FBLog.getTOKEN());
            FBLog.setFacebookClient(client);
            DialogUtils.showMessage(this, "Details", FBHelper.getUserInfo(FBLog.getFacebookClient()));
        } catch (Exception ex) {
            DialogUtils.showWarning(this, "Error", "Not found");
        }
    }//GEN-LAST:event_btnTestActionPerformed

    private void txtTokenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTokenKeyReleased
        // TODO add your handling code here:
        FBLog.setTOKEN(txtToken.getText());
    }//GEN-LAST:event_txtTokenKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        FBLog.setTargetUserID(tab0ID.getText());
        FBLog.writeLog();
    }//GEN-LAST:event_formWindowClosing

    private void tab0GetPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab0GetPostActionPerformed
        // TODO add your handling code here:
        if (validateTab0Input() == true) {
            resetTab0Data();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        StringBuilder posts = new StringBuilder();
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(feedId + "/feed", Post.class);
                        int count = 0;
                        for (List<Post> myFeedPage : myFeed) {
                            for (Post post : myFeedPage) {
                                if (count == FBLog.getMAX_NUM()) {
                                    return;
                                }
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + FBLog.getMAX_NUM());
                                posts.append(getPostsDetails(post));
                                txtLog.append(getPostsDetails(post));
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                                //facebookClient.publish(post.getId()+"/likes", Boolean.class);
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_tab0GetPostActionPerformed

    private void tab0MaxPostKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tab0MaxPostKeyReleased
        // TODO add your handling code here:
        try {
            int max = Integer.parseInt(tab0MaxPost.getText());
            FBLog.setMAX_NUM(max);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_tab0MaxPostKeyReleased

    private void tab0GoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab0GoActionPerformed
        // TODO add your handling code here:
        if (validateTab0Input() == true) {
            resetTab0Data();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        StringBuilder posts = new StringBuilder();
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(feedId + "/feed", Post.class);
                        int count = 0;
                        Random rd = new Random(6);
                        for (List<Post> myFeedPage : myFeed) {
                            for (Post post : myFeedPage) {
                                if (count == FBLog.getMAX_NUM()) {
                                    return;
                                }
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + FBLog.getMAX_NUM());
                                posts.append(getPostsDetails(post));
                                txtLog.append(getPostsDetails(post));
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                                try {
                                    
                                    int selectedIndex = tab0ReactionsOptions.getSelectedIndex();
                                    String reaction = "LIKE";
                                    if(selectedIndex == 6){
                                        int random = rd.nextInt(6);
                                        System.out.println("R:" + random);
                                        reaction = tab0ReactionsOptions.getItemAt(random).toUpperCase();
                                    } else{
                                        reaction = tab0ReactionsOptions.getItemAt(selectedIndex).toUpperCase();
                                    }
                                    System.out.println(reaction);
                                    FBLog.getFacebookClient().publish(post.getId() + "/reactions", Reactions.class,
                                        Parameter.with("type", reaction));
                                    
                                    
                                    //FBLog.getFacebookClient().publish(post.getId() + "/likes", Boolean.class);
                                    
                                } catch (Exception ex) {
                                    continue;
                                }
                                //facebookClient.publish(post.getId()+"/likes", Boolean.class);
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        } else {
        }
    }//GEN-LAST:event_tab0GoActionPerformed

    private void tab0GoCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab0GoCommentActionPerformed
        // TODO add your handling code here:
        if (validateTab0Input() == true) {
            String comment = tab0Comment.getText();
            if (comment.equals("")) {
                DialogUtils.showMessage(this, "Error", "Comment cannot empty");
                return;
            }
            String postFromId = tab0OnlyComment.getText();
            resetTab0Data();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        StringBuilder posts = new StringBuilder();
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(feedId + "/feed", Post.class);
                        int count = 0;
                        for (List<Post> myFeedPage : myFeed) {
                            for (Post post : myFeedPage) {
                                if (count == FBLog.getMAX_NUM()) {
                                    return;
                                }
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + FBLog.getMAX_NUM());
                                posts.append(getPostsDetails(post));
                                txtLog.append(getPostsDetails(post));
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                                try {
                                    try {
                                        if (postFromId.trim().equals("")) {
                                            FBLog.getFacebookClient().publish(post.getId() + "/comments",
                                                    String.class, Parameter.with("message", comment));
                                        } else {
                                            try {
                                                if (post.getFrom().getId().equals(postFromId)) {
                                                    FBLog.getFacebookClient().publish(post.getId() + "/comments", String.class, Parameter.with("message", comment));
                                                }
                                            } catch (Exception et) {
                                                DialogUtils.showMessage(MainActivity.this, "Error", "Not found only comment id");
                                                return;
                                            }

                                        }
                                    } catch (Exception ee) {
                                    }

                                } catch (Exception ex) {
                                    continue;
                                }
                                //facebookClient.publish(post.getId()+"/likes", Boolean.class);
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        } else {
        }
    }//GEN-LAST:event_tab0GoCommentActionPerformed

    private void tab1GetPostsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab1GetPostsActionPerformed
        // TODO add your handling code here:
        if (validateTab1Input() == true) {
            resetTab0Data();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        StringBuilder posts = new StringBuilder();
                        User user = FBLog.getFacebookClient().fetchObject("me", User.class);
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(user.getId() + "/home", Post.class);
                        int count = 0;
                        for (List<Post> myFeedPage : myFeed) {
                            for (Post post : myFeedPage) {
                                if (count == FBLog.getMAX_NUM()) {
                                    return;
                                }
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + FBLog.getMAX_NUM());
                                posts.append(getPostsDetails(post));
                                txtLog.append(getPostsDetails(post));
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                                //facebookClient.publish(post.getId()+"/likes", Boolean.class););
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_tab1GetPostsActionPerformed

    private void tab1GoCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab1GoCommentActionPerformed
        // TODO add your handling code here:
        if (validateTab1Input() == true) {
            String comment = tab1Comment.getText();
            if (comment.equals("")) {
                DialogUtils.showMessage(this, "Error", "Comment cannot empty");
                return;
            }
            String postFromId = tab1OnlyCommentID.getText();
            resetTab0Data();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        StringBuilder posts = new StringBuilder();
                        User user = FBLog.getFacebookClient().fetchObject("me", User.class);
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(user.getId() + "/home", Post.class);
                        int count = 0;
                        for (List<Post> myFeedPage : myFeed) {
                            for (Post post : myFeedPage) {
                                if (count == FBLog.getMAX_NUM()) {
                                    return;
                                }
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + FBLog.getMAX_NUM());
                                posts.append(getPostsDetails(post));
                                txtLog.append(getPostsDetails(post));
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                                try {
                                    try {
                                        if (postFromId.trim().equals("")) {
                                            FBLog.getFacebookClient().publish(post.getId() + "/comments",
                                                    String.class, Parameter.with("message", comment));
                                        } else {
                                            try{
                                                if (post.getFrom().getId().equals(postFromId)) {
                                                FBLog.getFacebookClient().publish(post.getId() + "/comments", String.class, Parameter.with("message", comment));
                                            }
                                            } catch(Exception et){
                                                DialogUtils.showMessage(MainActivity.this, "Error", "Not found only comment id");
                                                return;
                                            }
                                        }
                                    } catch (Exception ee) {
                                        
                                    }

                                } catch (Exception ex) {
                                    continue;
                                }
                                //facebookClient.publish(post.getId()+"/likes", Boolean.class);
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        } else {
        }

    }//GEN-LAST:event_tab1GoCommentActionPerformed

    private void tab1GoReactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab1GoReactActionPerformed
        // TODO add your handling code here:
        if (validateTab1Input() == true) {
            resetTab0Data();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        StringBuilder posts = new StringBuilder();
                        User user = FBLog.getFacebookClient().fetchObject("me", User.class);
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(user.getId() + "/home", Post.class);
                        int count = 0;
                        Random rd = new Random(6);
                        for (List<Post> myFeedPage : myFeed) {
                            for (Post post : myFeedPage) {
                                if (count == FBLog.getMAX_NUM()) {
                                    return;
                                }
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + FBLog.getMAX_NUM());
                                posts.append(getPostsDetails(post));
                                txtLog.append(getPostsDetails(post));
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                                try {
                                    int selectedIndex = tab1ReactionOptions.getSelectedIndex();
                                    String reaction = "LIKE";
                                    if(selectedIndex == 6){
                                        int random = rd.nextInt(6);
                                        System.out.println("R:" + random);
                                        reaction = tab1ReactionOptions.getItemAt(random).toUpperCase();
                                    } else{
                                        reaction = tab1ReactionOptions.getItemAt(selectedIndex).toUpperCase();
                                    }
                                    System.out.println(reaction);
                                    FBLog.getFacebookClient().publish(post.getId() + "/reactions", Reactions.class,
                                        Parameter.with("type", reaction));
                                    
                                    //FBLog.getFacebookClient().publish(post.getId() + "/likes", Boolean.class);
                                    
                                } catch (Exception ex) {
                                    continue;
                                }
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_tab1GoReactActionPerformed

    private void tab2GetCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2GetCommentsActionPerformed
        // TODO add your handling code here:
        if (validateTab2Input() == true) {
            resetTab0Data();
            String postID = tab2ID.getText();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        User user = FBLog.getFacebookClient().fetchObject("me", User.class);
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(user.getId() + "/home", Post.class);
                        int count = 0;
                        Connection<Comment> commentConnection = FBLog.getFacebookClient().fetchConnection(postID + "/comments",
                                Comment.class, Parameter.with("limit", 10));
                        int max = 0;
                        for (List<Comment> commentPage : commentConnection) {
                            for (Comment comment : commentPage) {
                                max++;
                            }
                        }
                        proStatus.setMaximum(max);
                        for (List<Comment> commentPage : commentConnection) {
                            for (Comment comment : commentPage) {
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + max);
                                txtLog.append("\n" + comment.getFrom().getName() + ": " + comment.getMessage());
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_tab2GetCommentsActionPerformed

    private void tab2GoReactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2GoReactActionPerformed
        // TODO add your handling code here:
        if (validateTab2Input() == true) {
            resetTab0Data();
            String postID = tab2ID.getText();
            try {
                Thread thread = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        User user = FBLog.getFacebookClient().fetchObject("me", User.class);
                        Connection<Post> myFeed = FBLog.getFacebookClient().fetchConnection(user.getId() + "/home", Post.class);
                        int count = 0;
                        Connection<Comment> commentConnection = FBLog.getFacebookClient().fetchConnection(postID + "/comments",
                                Comment.class, Parameter.with("limit", 10));
                        int max = 0;
                        for (List<Comment> commentPage : commentConnection) {
                            for (Comment comment : commentPage) {
                                max++;
                            }
                        }
                        proStatus.setMaximum(max);
                        for (List<Comment> commentPage : commentConnection) {
                            for (Comment comment : commentPage) {
                                count++;
                                proStatus.setValue(count);
                                lblStatus.setText(count + "/" + max);
                                txtLog.append("\n" + comment.getFrom().getName() + ": " + comment.getMessage());
                                txtLog.setCaretPosition(txtLog.getDocument().getLength());
                                FBLog.getFacebookClient().publish(comment.getId() + "/likes", Boolean.class);
//                                FBLog.getFacebookClient().publish(comment.getId() + "/reactions", Reactions.class,
//                                        Parameter.with("type", "LOVE"));
                            }
                        }
                    }
                });
                thread.start();
            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_tab2GoReactActionPerformed

    private void txtTokenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTokenFocusLost
        // TODO add your handling code here:
        FBLog.setTOKEN(txtToken.getText());
    }//GEN-LAST:event_txtTokenFocusLost

    private void tab0ReactionsOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab0ReactionsOptionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tab0ReactionsOptionsActionPerformed

    private boolean validateTab0Input() {
        if (FBLog.getFacebookClient() == null) {
            DialogUtils.showWarning(this, "Error", "Token error");
            txtToken.requestFocus();
            return false;
        } else {
            feedId = tab0ID.getText();
            if (feedId.equals("")) {
                DialogUtils.showWarning(this, "Error", "You must type the feed target id");
                tab0ID.requestFocus();
                return false;
            }
        }
        return true;
    }

    private boolean validateTab1Input() {
        if (FBLog.getFacebookClient() == null) {
            DialogUtils.showWarning(this, "Error", "Token error");
            txtToken.requestFocus();
            return false;
        } else {
            try {
                int max = Integer.parseInt(tab1Max.getText());
                FBLog.setMAX_NUM(max);
            } catch (Exception e) {
                DialogUtils.showWarning(this, "Error", "Max posts must be a number");
                return false;
            }
        }
        return true;
    }

    private boolean validateTab2Input() {
        if (FBLog.getFacebookClient() == null) {
            DialogUtils.showWarning(this, "Error", "Token error");
            txtToken.requestFocus();
            return false;
        } else {
            if (tab2ID.getText().trim().equals("")) {
                DialogUtils.showWarning(this, "Error", "Post ID cannot empty");
                return false;
            }
        }
        return true;
    }

    private void resetTab0Data() {
        proStatus.setValue(0);
        lblStatus.setText("0/0");
        txtLog.setText("");
        proStatus.setMaximum(FBLog.getMAX_NUM());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainActivity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHelpToken;
    private javax.swing.JButton btnTest;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JProgressBar proStatus;
    private javax.swing.JTextArea tab0Comment;
    private javax.swing.JButton tab0CommentHelp;
    private javax.swing.JButton tab0GetPost;
    private javax.swing.JButton tab0Go;
    private javax.swing.JButton tab0GoComment;
    private javax.swing.JTextField tab0ID;
    private javax.swing.JButton tab0IDHelp;
    private javax.swing.JTextField tab0MaxPost;
    private javax.swing.JButton tab0MaxPostHelp;
    private javax.swing.JTextField tab0OnlyComment;
    private javax.swing.JButton tab0OnlyCommentHelp;
    private javax.swing.JComboBox<String> tab0ReactionsOptions;
    private javax.swing.JTextArea tab1Comment;
    private javax.swing.JButton tab1GetPosts;
    private javax.swing.JButton tab1GoComment;
    private javax.swing.JButton tab1GoReact;
    private javax.swing.JTextField tab1Max;
    private javax.swing.JButton tab1MaxHelp;
    private javax.swing.JButton tab1MaxHelp1;
    private javax.swing.JTextField tab1OnlyCommentID;
    private javax.swing.JComboBox<String> tab1ReactionOptions;
    private javax.swing.JButton tab2GetComments;
    private javax.swing.JButton tab2GoReact;
    private javax.swing.JTextField tab2ID;
    private javax.swing.JComboBox<String> tab2ReactionOptions;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JScrollPane txtStatus;
    private javax.swing.JTextField txtToken;
    // End of variables declaration//GEN-END:variables

    private void addEvents() {
        txtToken.requestFocus();
    }

    private void customizeUI() {
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(GlobalValues.backgroundColor);
        txtToken.setText(FBLog.getTOKEN());
        tab0MaxPost.setText(FBLog.getMAX_NUM() + "");
        tab0ID.setText(FBLog.getTargetUserID());
        tab1Max.setText(FBLog.getMAX_NUM() + "");
    }

}
